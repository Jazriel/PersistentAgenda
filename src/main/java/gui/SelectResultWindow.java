package gui;

import java.awt.EventQueue;
import java.awt.GridLayout;

import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;

/**
 * SelectResultWindow. Clase main de nuestra api en modo gráfico.
 * 
 * @author Javier Martinez
 * @author Daniel Puente
 * @author Jaime Sagüillo
 * @author Jorge Zamora
 * @author Oscar Fernandez
 *
 */
public class SelectResultWindow extends JFrame {

	/**
	 * Auto generated by eclipse
	 */
	private static final long serialVersionUID = -5290754384873032554L;
	/**
	 * Panel sobre el que trabajar.
	 */
	private JPanel contentPane;
	/**
	 * Contenido del panel
	 */
	private JList<String> list;

	/**
	 * Contructor que lanza la aplicación.
	 * 
	 * @param list
	 *            Lista para el panel.
	 */
	public SelectResultWindow(String[] list) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					SelectResultWindow window = new SelectResultWindow(list, true);
					window.setVisible(true);
				} catch (Exception e) {
					System.err.println(e.getMessage());
				}
			}
		});
	}

	/**
	 * Constructor crea la aplicación.
	 * 
	 * @param list
	 *            Lista para el contenido del panel.
	 * @param b
	 *            Distinción entre los dos constructores.
	 */
	private SelectResultWindow(String[] list, boolean b) {
		initialize(list);
	}

	/**
	 * Inicializa el contenido del panel.
	 * 
	 * @param list
	 */
	private void initialize(String[] list) {
		setBounds(100, 100, 450, 300);
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		JScrollPane scroll = new JScrollPane(contentPane);

		setContentPane(scroll);

		contentPane.setLayout(new GridLayout(1, 0, 0, 0));

		this.list = new JList<>(list);
		contentPane.add(this.list);
	}

}
